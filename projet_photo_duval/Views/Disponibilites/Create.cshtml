@model projet_photo_duval.Models.Disponibilite

@{
    ViewBag.Title = "Ajout de disponibilité";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2>Ajout de disponibilité</h2>
        <div id="calender"></div>

        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title"><span id="eventTitle"></span></h4>
                    </div>
                    <div class="modal-body">
                        <p id="pDetails"></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group" hidden>
            @Html.LabelFor(model => model.Photographe_ID, "Photographe_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Photographe_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Photographe_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">    
            @Html.LabelFor(model => model.DateDebutDisponibilite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateDebutDisponibilite, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local", @Value = DateTime.Today.ToString("yyyy-MM-dd")+"T"+ DateTime.Now.ToString("HH:mm")} })
                @Html.ValidationMessageFor(model => model.DateDebutDisponibilite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateFinDisponibilite, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateFinDisponibilite, new { htmlAttributes = new { @class = "form-control", type = "datetime-local"} })
                @Html.ValidationMessageFor(model => model.DateFinDisponibilite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Créer disponibilité" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
<link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" rel="stylesheet" media="print" />

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>

    <script>
        $(document).ready(function () {
            var events = [];
            $.ajax({
                type: "GET",
                url: "/photographes/GetEvents",
                data:{photographeID: @ViewBag.Test},
                success: function (data) {
                    $.each(data, function (i, v) {
                        events.push({
                            title: ' ',
                            start: moment(v.DateDebutDisponibilite),
                            end: moment(v.DateFinDisponibilite)
                        });
                    })

                    GenerateCalender(events);
                },
                error: function (error) {
                    alert('failed');
                }
            })

            function GenerateCalender(events) {
                $('#calender').fullCalendar('destroy');
                $('#calender').fullCalendar({
                    defaultView: 'agendaWeek',
                    contentHeight: 400,
                    defaultDate: new Date(),
                    timeFormat: 'h(:mm)a',
                    eventLimit: true,
                    events: events,
                    minTime: "08:00:00",
                    maxTime:"21:00:00",
                    allDaySlot: false,
                    eventClick: function (calEvent, jsEvent, view) {
                        $('#myModal #eventTitle').text(calEvent.title);
                        var $description = $('<div/>');
                        $description.append($('<p/>').html('<b>Start:</b>' + calEvent.start.format("DD-MMM-YYYY HH:mm a")));
                        if (calEvent.end != null) {
                            $description.append($('<p/>').html('<b>End:</b>' + calEvent.end.format("DD-MMM-YYYY HH:mm a")));
                        }
                        if(calEvent.description != null){
                            $description.append($('<p/>').html('<b>Description:</b>' + calEvent.description));
                        }
                            $('#myModal #pDetails').empty().html($description);
                        

                        $('#myModal').modal();
                    }
                })
            }
        })
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
